var ledgerTypes=function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e){class r{constructor(t,e){t instanceof Decimal?this.value=t:this.value=new Decimal(`${t}`),this.commodity=e||""}static create(t){return t instanceof r?t:new r(
/**
 * @module ledger-types
 * @license MIT
 * @author zimmi
 */
function(t){var e=new Decimal(0);return e.d=t.d,e.e=t.e,e.s=t.s,e}(t.value),t.commodity)}hasSameCommodity(t){return!(!t.hasOwnProperty("commodity")||this.commodity!==t.commodity)}add(t){if(this.hasSameCommodity(t))return new r(this.value.add(t.value),this.commodity)}sub(t){if(this.hasSameCommodity(t))return new r(this.value.sub(t.value),this.commodity)}mul(t){if(this.hasSameCommodity(t))return new r(this.value.mul(t.value),this.commodity)}div(t){if(this.hasSameCommodity(t))return new r(this.value.div(t.value),this.commodity)}equals(t){if(this.hasSameCommodity(t))return this.value.equals(t.value);throw new TypeError("Cannot compare amounts of different commodities")}greaterThan(t){if(this.hasSameCommodity(t))return this.hasSameCommodity(t),this.value.greaterThan(t.value);throw new TypeError("Cannot compare amounts of different commodities")}greaterThanOrEqualTo(t){if(this.hasSameCommodity(t))return this.hasSameCommodity(t),this.value.greaterThanOrEqualTo(t.value);throw new TypeError("Cannot compare amounts of different commodities")}lessThan(t){if(this.hasSameCommodity(t))return this.hasSameCommodity(t),this.value.lessThan(t.value);throw new TypeError("Cannot compare amounts of different commodities")}lessThanOrEqualTo(t){if(this.hasSameCommodity(t))return this.hasSameCommodity(t),this.value.lessThanOrEqualTo(t.value);throw new TypeError("Cannot compare amounts of different commodities")}}class n{constructor(t){t instanceof r?this[t.commodity]=t:Object.assign(this,t)}static create(t){if(t instanceof n)return t;var e=new n({});return Object.keys(t).forEach(n=>{-1===n.indexOf("_")&&(e=e.add(r.create(t[n])))}),e}addAmount(t){var e=new n(this);return this.hasOwnProperty(t.commodity)?e[t.commodity]=e[t.commodity].add(t):e[t.commodity]=t,e}add(t){if(t instanceof r)return this.addAmount(t);var e=new n(this);return Object.keys(t).forEach(r=>{e=e.addAmount(t[r])}),e}subAmount(t){var e=new n(this);return this.hasOwnProperty(t.commodity)?e[t.commodity]=e[t.commodity].sub(t):e[t.commodity]=t.mul(new r(-1,t.commodity)),e}sub(t){if(t instanceof r)return this.subAmount(t);var e=new n(this);return Object.keys(t).forEach(r=>{e=e.subAmount(t[r])}),e}mulAmount(t){var e=new n(this);return this.hasOwnProperty(t.commodity)&&(e[t.commodity]=e[t.commodity].mul(t)),e}mul(t){if(t instanceof r)return this.mulAmount(t);throw new TypeError("Balances can only be multiplied by Amounts")}divAmount(t){var e=new n(this);return this.hasOwnProperty(t.commodity)&&(e[t.commodity]=e[t.commodity].div(t)),e}div(t){if(t instanceof r)return this.divAmount(t);throw new TypeError("Balances can only be divided by Amounts")}equals(t){var e=Object.keys(this);if(e.length!==Object.keys(t).length)return!1;var r=!0;return e.forEach(e=>{t.hasOwnProperty(e)&&this[e].equals(t[e])||(r=!1)}),r}commodities(){return Object.keys(this).filter(t=>!t.startsWith("_"))}}class o{constructor(t){this.__bal=t||new n({})}static create(t){if(t instanceof o)return t;var e=new o(new n({}));return Object.keys(t).forEach(r=>{"__bal"===r?e.__bal=n.create(t[r]):-1===r.indexOf("_")&&(e[r]=o.create(t[r]))}),e}_add(t,e){for(var r,n=this;e.length>0;)r=e.shift(),n.hasOwnProperty(r)?n[r].__bal=n[r].__bal.add(t):n[r]=new o(t),n=n[r]}_bal(){if(this.hasOwnProperty("__bal")&&!this.__bal.equals(new n({})))return this.__bal;var t=Object.keys(this);return this.__bal=new n({}),t.length>0&&t.forEach(t=>{t.startsWith("_")||(this.__bal=this.__bal.add(this[t]._bal()))}),this.__bal}}function a(t){if(t.startsWith("P ")){var e=t.substring(2,12),r=e.split("/");return e=`${r[1]}/${r[2]}/${r[0]} 00:00:00 GMT+00:00`,Date.now()>=new Date(e).getTime()}return!1}const i={parseCommodityPrice:function(t,e="GULD",n="USD"){var o,i;e=e.toUpperCase(),n=n.toUpperCase(),o=(t=t.split("\n").reverse()).filter(a);var s=`[0-9.]*[ ]{0,1}${n}$`.replace(e,"");if((i=new RegExp(s,"m").exec(o.join("\n")))&&i.length>0&&i[0].length>0){var m=i[0].replace(e,"").trim().replace(n,"").trim();return new r(m,n)}throw new RangeError(`Price not found for commodity ${e}`)}};t.exports={Amount:r,Balance:n,Account:o,commodity:i,Transaction:class{constructor(t){this.raw=t}static getType(t){var e=/^[0-9]{4}\/[0-9]{2}\/[0-9]{2} \* [ a-zA-Z0-9]*$/m.exec(t);if(e&&e.length>0&&e[0].length>0)return e[0].split("*")[1].trim();throw new TypeError("expected a ledger transaction, but found unknown type")}static getTimestamp(t){var e=/^ {4}; (timestamp|START_TIME): [0-9]+$/m.exec(t);if(e&&e.length>0&&e[0].length>0)return e[0].split(":")[1].trim();throw new TypeError("expected a ledger transaction, but found unknown type")}static getAmount(t){var e=/^ +[:a-zA-Z-]+ +[0-9a-zA-Z,. ]+$/m,r=e.exec(t);if(r&&r.length>0&&r[0].length>0){var n=r[0].replace(",","");if((r=(e=/[0-9.]+/).exec(n))&&r.length>0&&r[0].length>0)return r[0];throw new TypeError("expected a ledger transaction, but found unknown type")}throw new TypeError("expected a ledger transaction, but found unknown type")}}}}]);